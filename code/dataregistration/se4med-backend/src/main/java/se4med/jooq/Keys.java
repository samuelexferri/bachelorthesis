/*
 * This file is generated by jOOQ.
 */
package se4med.jooq;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.UInteger;

import se4med.jooq.tables.Application;
import se4med.jooq.tables.Doctor;
import se4med.jooq.tables.Doctorapp;
import se4med.jooq.tables.Doctorpatient;
import se4med.jooq.tables.Patient;
import se4med.jooq.tables.Patientdoc;
import se4med.jooq.tables.Project;
import se4med.jooq.tables.ResultNotRegistered;
import se4med.jooq.tables.Results;
import se4med.jooq.tables.User;
import se4med.jooq.tables.records.ApplicationRecord;
import se4med.jooq.tables.records.DoctorRecord;
import se4med.jooq.tables.records.DoctorappRecord;
import se4med.jooq.tables.records.DoctorpatientRecord;
import se4med.jooq.tables.records.PatientRecord;
import se4med.jooq.tables.records.PatientdocRecord;
import se4med.jooq.tables.records.ProjectRecord;
import se4med.jooq.tables.records.ResultNotRegisteredRecord;
import se4med.jooq.tables.records.ResultsRecord;
import se4med.jooq.tables.records.UserRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>se4med</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PatientdocRecord, UInteger> IDENTITY_PATIENTDOC = Identities0.IDENTITY_PATIENTDOC;
    public static final Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Identities0.IDENTITY_PROJECT;
    public static final Identity<ResultNotRegisteredRecord, Integer> IDENTITY_RESULT_NOT_REGISTERED = Identities0.IDENTITY_RESULT_NOT_REGISTERED;
    public static final Identity<ResultsRecord, Integer> IDENTITY_RESULTS = Identities0.IDENTITY_RESULTS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ApplicationRecord> KEY_APPLICATION_PRIMARY = UniqueKeys0.KEY_APPLICATION_PRIMARY;
    public static final UniqueKey<DoctorRecord> KEY_DOCTOR_PRIMARY = UniqueKeys0.KEY_DOCTOR_PRIMARY;
    public static final UniqueKey<DoctorappRecord> KEY_DOCTORAPP_PRIMARY = UniqueKeys0.KEY_DOCTORAPP_PRIMARY;
    public static final UniqueKey<DoctorpatientRecord> KEY_DOCTORPATIENT_PRIMARY = UniqueKeys0.KEY_DOCTORPATIENT_PRIMARY;
    public static final UniqueKey<PatientRecord> KEY_PATIENT_PRIMARY = UniqueKeys0.KEY_PATIENT_PRIMARY;
    public static final UniqueKey<PatientdocRecord> KEY_PATIENTDOC_PRIMARY = UniqueKeys0.KEY_PATIENTDOC_PRIMARY;
    public static final UniqueKey<ProjectRecord> KEY_PROJECT_PRIMARY = UniqueKeys0.KEY_PROJECT_PRIMARY;
    public static final UniqueKey<ProjectRecord> KEY_PROJECT_ID_UNIQUE = UniqueKeys0.KEY_PROJECT_ID_UNIQUE;
    public static final UniqueKey<ResultNotRegisteredRecord> KEY_RESULT_NOT_REGISTERED_PRIMARY = UniqueKeys0.KEY_RESULT_NOT_REGISTERED_PRIMARY;
    public static final UniqueKey<ResultsRecord> KEY_RESULTS_PRIMARY = UniqueKeys0.KEY_RESULTS_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ApplicationRecord, ProjectRecord> IDPROJECT = ForeignKeys0.IDPROJECT;
    public static final ForeignKey<DoctorRecord, UserRecord> EMAILDOC = ForeignKeys0.EMAILDOC;
    public static final ForeignKey<DoctorappRecord, DoctorRecord> EMAILDOCTORDOCTORAPP = ForeignKeys0.EMAILDOCTORDOCTORAPP;
    public static final ForeignKey<DoctorappRecord, ApplicationRecord> APPDOCTOR = ForeignKeys0.APPDOCTOR;
    public static final ForeignKey<DoctorpatientRecord, DoctorRecord> EMAILDOCTOR = ForeignKeys0.EMAILDOCTOR;
    public static final ForeignKey<DoctorpatientRecord, PatientRecord> EMAILUSER = ForeignKeys0.EMAILUSER;
    public static final ForeignKey<DoctorpatientRecord, ApplicationRecord> APPUSERDOCTOR = ForeignKeys0.APPUSERDOCTOR;
    public static final ForeignKey<PatientRecord, UserRecord> EMAILPATIENT = ForeignKeys0.EMAILPATIENT;
    public static final ForeignKey<PatientdocRecord, DoctorRecord> FK_PATIENTDOC_1 = ForeignKeys0.FK_PATIENTDOC_1;
    public static final ForeignKey<ResultNotRegisteredRecord, PatientdocRecord> FK_RESULT_NOT_REGISTERED_1 = ForeignKeys0.FK_RESULT_NOT_REGISTERED_1;
    public static final ForeignKey<ResultsRecord, ApplicationRecord> APPRESULTS = ForeignKeys0.APPRESULTS;
    public static final ForeignKey<ResultsRecord, PatientRecord> RESULTS_IBFK_1 = ForeignKeys0.RESULTS_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PatientdocRecord, UInteger> IDENTITY_PATIENTDOC = Internal.createIdentity(Patientdoc.PATIENTDOC, Patientdoc.PATIENTDOC.ID);
        public static Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Internal.createIdentity(Project.PROJECT, Project.PROJECT.ID);
        public static Identity<ResultNotRegisteredRecord, Integer> IDENTITY_RESULT_NOT_REGISTERED = Internal.createIdentity(ResultNotRegistered.RESULT_NOT_REGISTERED, ResultNotRegistered.RESULT_NOT_REGISTERED.ID);
        public static Identity<ResultsRecord, Integer> IDENTITY_RESULTS = Internal.createIdentity(Results.RESULTS, Results.RESULTS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ApplicationRecord> KEY_APPLICATION_PRIMARY = Internal.createUniqueKey(Application.APPLICATION, "KEY_application_PRIMARY", Application.APPLICATION.ID);
        public static final UniqueKey<DoctorRecord> KEY_DOCTOR_PRIMARY = Internal.createUniqueKey(Doctor.DOCTOR, "KEY_doctor_PRIMARY", Doctor.DOCTOR.EMAIL);
        public static final UniqueKey<DoctorappRecord> KEY_DOCTORAPP_PRIMARY = Internal.createUniqueKey(Doctorapp.DOCTORAPP, "KEY_doctorapp_PRIMARY", Doctorapp.DOCTORAPP.EMAILDOCTOR, Doctorapp.DOCTORAPP.IDAPP);
        public static final UniqueKey<DoctorpatientRecord> KEY_DOCTORPATIENT_PRIMARY = Internal.createUniqueKey(Doctorpatient.DOCTORPATIENT, "KEY_doctorpatient_PRIMARY", Doctorpatient.DOCTORPATIENT.EMAILDOCTOR, Doctorpatient.DOCTORPATIENT.EMAILPATIENT, Doctorpatient.DOCTORPATIENT.USERNAME, Doctorpatient.DOCTORPATIENT.IDAPP);
        public static final UniqueKey<PatientRecord> KEY_PATIENT_PRIMARY = Internal.createUniqueKey(Patient.PATIENT, "KEY_patient_PRIMARY", Patient.PATIENT.USERNAME, Patient.PATIENT.EMAILPATIENT);
        public static final UniqueKey<PatientdocRecord> KEY_PATIENTDOC_PRIMARY = Internal.createUniqueKey(Patientdoc.PATIENTDOC, "KEY_patientdoc_PRIMARY", Patientdoc.PATIENTDOC.ID, Patientdoc.PATIENTDOC.EMAILDOC);
        public static final UniqueKey<ProjectRecord> KEY_PROJECT_PRIMARY = Internal.createUniqueKey(Project.PROJECT, "KEY_project_PRIMARY", Project.PROJECT.ID);
        public static final UniqueKey<ProjectRecord> KEY_PROJECT_ID_UNIQUE = Internal.createUniqueKey(Project.PROJECT, "KEY_project_id_UNIQUE", Project.PROJECT.ID);
        public static final UniqueKey<ResultNotRegisteredRecord> KEY_RESULT_NOT_REGISTERED_PRIMARY = Internal.createUniqueKey(ResultNotRegistered.RESULT_NOT_REGISTERED, "KEY_result_not_registered_PRIMARY", ResultNotRegistered.RESULT_NOT_REGISTERED.ID);
        public static final UniqueKey<ResultsRecord> KEY_RESULTS_PRIMARY = Internal.createUniqueKey(Results.RESULTS, "KEY_results_PRIMARY", Results.RESULTS.ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.EMAIL);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ApplicationRecord, ProjectRecord> IDPROJECT = Internal.createForeignKey(se4med.jooq.Keys.KEY_PROJECT_PRIMARY, Application.APPLICATION, "idproject", Application.APPLICATION.IDPROJECT);
        public static final ForeignKey<DoctorRecord, UserRecord> EMAILDOC = Internal.createForeignKey(se4med.jooq.Keys.KEY_USER_PRIMARY, Doctor.DOCTOR, "emaildoc", Doctor.DOCTOR.EMAIL);
        public static final ForeignKey<DoctorappRecord, DoctorRecord> EMAILDOCTORDOCTORAPP = Internal.createForeignKey(se4med.jooq.Keys.KEY_DOCTOR_PRIMARY, Doctorapp.DOCTORAPP, "emaildoctorDoctorApp", Doctorapp.DOCTORAPP.EMAILDOCTOR);
        public static final ForeignKey<DoctorappRecord, ApplicationRecord> APPDOCTOR = Internal.createForeignKey(se4med.jooq.Keys.KEY_APPLICATION_PRIMARY, Doctorapp.DOCTORAPP, "appDoctor", Doctorapp.DOCTORAPP.IDAPP);
        public static final ForeignKey<DoctorpatientRecord, DoctorRecord> EMAILDOCTOR = Internal.createForeignKey(se4med.jooq.Keys.KEY_DOCTOR_PRIMARY, Doctorpatient.DOCTORPATIENT, "emaildoctor", Doctorpatient.DOCTORPATIENT.EMAILDOCTOR);
        public static final ForeignKey<DoctorpatientRecord, PatientRecord> EMAILUSER = Internal.createForeignKey(se4med.jooq.Keys.KEY_PATIENT_PRIMARY, Doctorpatient.DOCTORPATIENT, "emailuser", Doctorpatient.DOCTORPATIENT.USERNAME, Doctorpatient.DOCTORPATIENT.EMAILPATIENT);
        public static final ForeignKey<DoctorpatientRecord, ApplicationRecord> APPUSERDOCTOR = Internal.createForeignKey(se4med.jooq.Keys.KEY_APPLICATION_PRIMARY, Doctorpatient.DOCTORPATIENT, "appuserdoctor", Doctorpatient.DOCTORPATIENT.IDAPP);
        public static final ForeignKey<PatientRecord, UserRecord> EMAILPATIENT = Internal.createForeignKey(se4med.jooq.Keys.KEY_USER_PRIMARY, Patient.PATIENT, "emailPatient", Patient.PATIENT.EMAILPATIENT);
        public static final ForeignKey<PatientdocRecord, DoctorRecord> FK_PATIENTDOC_1 = Internal.createForeignKey(se4med.jooq.Keys.KEY_DOCTOR_PRIMARY, Patientdoc.PATIENTDOC, "fk_patientdoc_1", Patientdoc.PATIENTDOC.EMAILDOC);
        public static final ForeignKey<ResultNotRegisteredRecord, PatientdocRecord> FK_RESULT_NOT_REGISTERED_1 = Internal.createForeignKey(se4med.jooq.Keys.KEY_PATIENTDOC_PRIMARY, ResultNotRegistered.RESULT_NOT_REGISTERED, "fk_result_not_registered_1", ResultNotRegistered.RESULT_NOT_REGISTERED.IDUTENTE);
        public static final ForeignKey<ResultsRecord, ApplicationRecord> APPRESULTS = Internal.createForeignKey(se4med.jooq.Keys.KEY_APPLICATION_PRIMARY, Results.RESULTS, "appresults", Results.RESULTS.IDAPP);
        public static final ForeignKey<ResultsRecord, PatientRecord> RESULTS_IBFK_1 = Internal.createForeignKey(se4med.jooq.Keys.KEY_PATIENT_PRIMARY, Results.RESULTS, "results_ibfk_1", Results.RESULTS.USERNAME, Results.RESULTS.EMAILPATIENT);
    }
}
