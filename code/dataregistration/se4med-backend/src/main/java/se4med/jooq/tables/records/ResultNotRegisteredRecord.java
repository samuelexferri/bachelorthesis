/*
 * This file is generated by jOOQ.
 */
package se4med.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import se4med.jooq.tables.ResultNotRegistered;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResultNotRegisteredRecord extends UpdatableRecordImpl<ResultNotRegisteredRecord> implements Record5<Integer, String, Timestamp, String, UInteger> {

    private static final long serialVersionUID = -1804655180;

    /**
     * Setter for <code>se4med.result_not_registered.id</code>. questa tabella contiene i risultati

ogni record è identificato da un id univoco
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>se4med.result_not_registered.id</code>. questa tabella contiene i risultati

ogni record è identificato da un id univoco
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>se4med.result_not_registered.idapp</code>. fa riferimento all'app con cui si è fatto il test/gioco/.... -&gt; FK

se l'id della tabella application viene aggiornato, viene aggiornato anche idapp
se l'id della tabella application viene cancellato e c'è un record che contiene quell'id, non viene permessa la cancellazione dell'applicazione


     */
    public void setIdapp(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>se4med.result_not_registered.idapp</code>. fa riferimento all'app con cui si è fatto il test/gioco/.... -&gt; FK

se l'id della tabella application viene aggiornato, viene aggiornato anche idapp
se l'id della tabella application viene cancellato e c'è un record che contiene quell'id, non viene permessa la cancellazione dell'applicazione


     */
    public String getIdapp() {
        return (String) get(1);
    }

    /**
     * Setter for <code>se4med.result_not_registered.dateandtime</code>. data/ora a cui si è giocato
     */
    public void setDateandtime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>se4med.result_not_registered.dateandtime</code>. data/ora a cui si è giocato
     */
    public Timestamp getDateandtime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>se4med.result_not_registered.result</code>. è una stringa contenente informazioni relative al risultato del gioco/trattamento, questa varia in base al gioco/trattamento che si sta registrando
     */
    public void setResult(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>se4med.result_not_registered.result</code>. è una stringa contenente informazioni relative al risultato del gioco/trattamento, questa varia in base al gioco/trattamento che si sta registrando
     */
    public String getResult() {
        return (String) get(3);
    }

    /**
     * Setter for <code>se4med.result_not_registered.idutente</code>.
     */
    public void setIdutente(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>se4med.result_not_registered.idutente</code>.
     */
    public UInteger getIdutente() {
        return (UInteger) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Timestamp, String, UInteger> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Timestamp, String, UInteger> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ResultNotRegistered.RESULT_NOT_REGISTERED.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ResultNotRegistered.RESULT_NOT_REGISTERED.IDAPP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return ResultNotRegistered.RESULT_NOT_REGISTERED.DATEANDTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ResultNotRegistered.RESULT_NOT_REGISTERED.RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field5() {
        return ResultNotRegistered.RESULT_NOT_REGISTERED.IDUTENTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIdapp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getDateandtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component5() {
        return getIdutente();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIdapp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getDateandtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value5() {
        return getIdutente();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResultNotRegisteredRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResultNotRegisteredRecord value2(String value) {
        setIdapp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResultNotRegisteredRecord value3(Timestamp value) {
        setDateandtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResultNotRegisteredRecord value4(String value) {
        setResult(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResultNotRegisteredRecord value5(UInteger value) {
        setIdutente(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResultNotRegisteredRecord values(Integer value1, String value2, Timestamp value3, String value4, UInteger value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResultNotRegisteredRecord
     */
    public ResultNotRegisteredRecord() {
        super(ResultNotRegistered.RESULT_NOT_REGISTERED);
    }

    /**
     * Create a detached, initialised ResultNotRegisteredRecord
     */
    public ResultNotRegisteredRecord(Integer id, String idapp, Timestamp dateandtime, String result, UInteger idutente) {
        super(ResultNotRegistered.RESULT_NOT_REGISTERED);

        set(0, id);
        set(1, idapp);
        set(2, dateandtime);
        set(3, result);
        set(4, idutente);
    }
}
