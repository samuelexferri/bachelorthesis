/*
 * This file is generated by jOOQ.
 */
package se4med.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import se4med.jooq.tables.Patientdoc;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientdocRecord extends UpdatableRecordImpl<PatientdocRecord> implements Record4<UInteger, String, String, String> {

    private static final long serialVersionUID = -493206840;

    /**
     * Setter for <code>se4med.patientdoc.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>se4med.patientdoc.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>se4med.patientdoc.surname</code>.
     */
    public void setSurname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>se4med.patientdoc.surname</code>.
     */
    public String getSurname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>se4med.patientdoc.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>se4med.patientdoc.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>se4med.patientdoc.emaildoc</code>.
     */
    public void setEmaildoc(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>se4med.patientdoc.emaildoc</code>.
     */
    public String getEmaildoc() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<UInteger, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Patientdoc.PATIENTDOC.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Patientdoc.PATIENTDOC.SURNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Patientdoc.PATIENTDOC.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Patientdoc.PATIENTDOC.EMAILDOC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSurname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getEmaildoc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSurname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEmaildoc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientdocRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientdocRecord value2(String value) {
        setSurname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientdocRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientdocRecord value4(String value) {
        setEmaildoc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientdocRecord values(UInteger value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PatientdocRecord
     */
    public PatientdocRecord() {
        super(Patientdoc.PATIENTDOC);
    }

    /**
     * Create a detached, initialised PatientdocRecord
     */
    public PatientdocRecord(UInteger id, String surname, String name, String emaildoc) {
        super(Patientdoc.PATIENTDOC);

        set(0, id);
        set(1, surname);
        set(2, name);
        set(3, emaildoc);
    }
}
