/*
 * This file is generated by jOOQ.
 */
package se4med.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import se4med.jooq.tables.User;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record6<String, String, String, String, Byte, Byte> {

    private static final long serialVersionUID = -1357748255;

    /**
     * Setter for <code>se4med.user.email</code>. questa tabella identifica i proprietari delle email, ogni proprietario può avere associato uno o più utenti.

     */
    public void setEmail(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>se4med.user.email</code>. questa tabella identifica i proprietari delle email, ogni proprietario può avere associato uno o più utenti.

     */
    public String getEmail() {
        return (String) get(0);
    }

    /**
     * Setter for <code>se4med.user.surname</code>.
     */
    public void setSurname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>se4med.user.surname</code>.
     */
    public String getSurname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>se4med.user.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>se4med.user.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>se4med.user.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>se4med.user.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>se4med.user.activated</code>. indica se l'email è stata attivata
0 -&gt; NON ATTIVATA
1 -&gt; ATTIVATA
     */
    public void setActivated(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>se4med.user.activated</code>. indica se l'email è stata attivata
0 -&gt; NON ATTIVATA
1 -&gt; ATTIVATA
     */
    public Byte getActivated() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>se4med.user.attemptslogin</code>.
     */
    public void setAttemptslogin(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>se4med.user.attemptslogin</code>.
     */
    public Byte getAttemptslogin() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, Byte, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, Byte, Byte> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return User.USER.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return User.USER.SURNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return User.USER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return User.USER.ACTIVATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return User.USER.ATTEMPTSLOGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSurname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getActivated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component6() {
        return getAttemptslogin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSurname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getActivated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getAttemptslogin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value1(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value2(String value) {
        setSurname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value5(Byte value) {
        setActivated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value6(Byte value) {
        setAttemptslogin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord values(String value1, String value2, String value3, String value4, Byte value5, Byte value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String email, String surname, String name, String password, Byte activated, Byte attemptslogin) {
        super(User.USER);

        set(0, email);
        set(1, surname);
        set(2, name);
        set(3, password);
        set(4, activated);
        set(5, attemptslogin);
    }
}
